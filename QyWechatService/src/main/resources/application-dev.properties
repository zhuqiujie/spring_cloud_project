server.servlet.context-path=/qywxServer
server.port=8433


##########               数据源的配置                             #################
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://172.16.23.194:3306/cube_qywechat_dev?characterEncoding=utf-8
spring.datasource.druid.username=root
spring.datasource.druid.password=sandi123!@#
spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.db-type=mysql
#初始化连接数量
spring.datasource.druid.initial-size=15
#最小空闲连接数
spring.datasource.druid.min-idle=5
#最大并发连接数
spring.datasource.druid.max-active=30
#配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=30000
#Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis，则关闭当前连接。单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
spring.datasource.druid.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效
spring.datasource.druid.test-on-borrow=true
# 归还连接时执行validationQuery检测连接是否有效 
spring.datasource.druid.test-on-return=false
#是否缓存preparedStatement，也就是PSCache
spring.datasource.druid.pool-prepared-statements=true
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.druid.max-open-prepared-statements=30
#通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
spring.datasource.druid.filters==stat,logback,wall
# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#允许重置统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
#ip白名单
#spring.datasource.druid.stat-view-servlet.allow=
#ip黑名单
#spring.datasource.druid.stat-view-servlet.deny=



##########               myBatis的配置                           #################
#myBatis配置文件
mybatis.config-location = classpath:myBatis/mybatis-config.xml
#mapper配置文件
mybatis.mapper-locations = classpath*:/myBatis/mysql/*.xml
#扫描自动生成别名cn.com.sandi.qywx.appInfo.model.QywxAppInfo
#mybatis.type-aliases-package = cn.com.sandi.qywx.*.model



##########                jpa的配置                                     #################
#jpa扫描Entity类
jpa.packagesToScan=cn.com.sandi.qywx.*.model
#jpa扫描dao层接口 动态代理 自动实现
jpa.repository_base_package=cn.com.sandi.qywx.*.dao
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl




##########                id生成策略                                     #################
snowFlake.datacenterId = 1
snowFlake.machineId = 1


#logging.file=test.log    会在当前的项目路径下面，生成一个叫test.log的日志文件
#logging.path=D://test21.log   会在D盘，生成一个test21.log的目录，然后生成一个叫spring.log的日志文件

#redis 配置
spring.redis.database=2
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.jedis.pool.max-wait=1s

#.jsp文件路径配置
spring.mvc.view.suffix=.jsp
spring.mvc.view.prefix=/WEB-INF/jsp/

#热部署，添加那个目录的文件需要restart
#spring.devtools.restart.additional-paths=src/main/java